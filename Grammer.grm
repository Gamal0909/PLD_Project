! Welcome to GOLD Parser Builder 5.2
"Name" = 'Project_Grammar'
"Author"= 'GamalMohamed'
"Start Symbol" = <Program>
      


!---------------------------
!SETS
!---------------------------
{Varnamest}={Letter} + [_]
{Varnameed}= {Alphanumeric} + [_]
{char}={Printable} +{HT} - ["\]

! -------------------------------------------------
! Terminals
! -------------------------------------------------
Varname={Varnamest}{Varnameed}*
String = '"'{char}*'"'
Integer ={digit}+
Char = '"' {char}'"'
Float ={digit}*'.'{digit}+

! -------------------------------------------------
! Rules
! -------------------------------------------------

<Program> ::= <StatementList>

<StatementList> ::= 
                  | <StatementList> <Statement>
                  | <Statement>

<Statement> ::= <Declaration and ass>
              | <IFStat>
              | <SwitchCase>
              | <ForLoop>
              | <While>
              | <DoWhile>

! -------------------------------------------------
! DECLARATION AND ASSIGNMENT
! -------------------------------------------------
<Declaration and ass> ::= Varname '=' <Expression>

 
! -------------------------------------------------
! IFSTATMENT
! -------------------------------------------------          
<IFStat> ::= 'if' <Expression> ':' <StatementList>
           | 'if' <Expression> ':' <StatementList> 'else' ':' <StatementList>
         
! -------------------------------------------------
! SWITCHCASE
! -------------------------------------------------
         
<SwitchCase> ::= 'switch' <Expression> ':' <Cases> <Default>
             
<Cases> ::= 'case' <Expression> ':' <StatementList> 'break'
          | <Cases> 'case' <Expression> ':' <StatementList> 'break'

<Default> ::= 'Default' ':' <StatementList> 'break'

                
! -------------------------------------------------
! FORLOOP
! -------------------------------------------------

<ForLoop> ::= 'for' Varname 'in range (' <Negate Exp> ')' <StatementList>



! -------------------------------------------------
! WHILELOOP
! -------------------------------------------------

<While> ::= 'while' <Expression> ':' <StatementList>

! -------------------------------------------------
! DOWHILELOOP
! -------------------------------------------------

<DoWhile> ::= 'do' <StatementList> ':' 'while' <Expression>





! -------------------------------------------------
! Expression
! -------------------------------------------------

<Expression>  ::= <Expression> '>'  <Add Exp> 
               |  <Expression> '<'  <Add Exp> 
               |  <Expression> '<=' <Add Exp> 
               |  <Expression> '>=' <Add Exp>
               |  <Expression> '==' <Add Exp>    !Equal
               |  <Expression> '<>' <Add Exp>    !Not equal
               |  <Add Exp> 

<Add Exp>     ::= <Add Exp> '+' <Mult Exp>
               |  <Add Exp> '-' <Mult Exp>
               |  <Mult Exp> 

<Mult Exp>    ::= <Mult Exp> '*' <Negate Exp> 
               |  <Mult Exp> '/' <Negate Exp> 
               |  <Negate Exp> 

<Negate Exp>  ::= '-' <Value> 
               |  <Value> 

!Add more values to the rule below - as needed

<Value>       ::= Identifier
               |Integer
               |StringLiteral
               |  '(' <Expression> ')'



































































                 
